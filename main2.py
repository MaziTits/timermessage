import telebot
from telebot import types
import threading
from config import channels_name, channels_id, channels_link

TOKEN = '7366677041:AAED17dQSi-4dIz2_fGCiA-YzL3r8H3qRbg'

bot = telebot.TeleBot(TOKEN)

# start
@bot.message_handler(commands=['start'])
def start(message):
    if check_sub(message=message, id=channels_id[0]) == True and check_sub(message=message, id=channels_id[1]) == True:
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –û–Ω –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –∫–ª–µ–π–º–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –≤–æ –≤—Å—è–∫–∏—Ö —Ö—É–π–Ω—è—Ö –ø–æ —Ç–∏–ø—É –Ω–æ—Ç–∫–æ–∏–Ω–∞ {0.first_name}!' .format(message.from_user), reply_markup=markup())
    else:
        bot.send_message(message.chat.id, '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã! \n' + channels_link[0] + '\n' + channels_link[1] .format(message.from_user))

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def check_sub(message, id):
  user_id = message.from_user.id
  memeber = bot.get_chat_member(id, user_id)
  if memeber.status in ['member', 'administrator', 'creator']:
    return True
  else:
    return False

# –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (—Ç–∞–π–º–µ—Ä)
def send_delayed_message(chat_id, text, delay):
    def task():
        bot.send_message(chat_id, text)
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
    threading.Timer(delay, task).start()

def handle_delay(message,delay,text):
    chat_id = message.chat.id
    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    bot.send_message(chat_id, f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥.")
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    send_delayed_message(chat_id, text, delay)

# –º–∞—Ä–∫–∞–ø –∏–≥—Ä
def markup():
  markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
  item1 = types.KeyboardButton('–•–æ–º—è–∫')
  itemBL = types.KeyboardButton('Blum')
  itemhot = types.KeyboardButton('Hot')
  markup.add(item1,itemBL,itemhot)
  return markup

# –º–∞—Ä–∫–∞–ø —Ö–æ–º—è–∫
def two_markup():
    markyp_reply = types.ReplyKeyboardMarkup(resize_keyboard= True)
    info = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ')
    item3h = types.KeyboardButton('3 —á–∞—Å–∞')
    chat = types.KeyboardButton('—á–∞—Ç')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markyp_reply.add(info,chat,item3h,back,)
    return markyp_reply

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text in ['','–•–æ–º—è–∫', '–ù–∞–∑–∞–¥', '3 —á–∞—Å–∞', '—á–∞—Ç', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ'])
def handle_first_buttons(message):
    if check_sub(message=message, id=channels_id[0]) == True and check_sub(message=message, id=channels_id[1]) == True:
        if message.text == '–ö–Ω–æ–ø–∫–∞ 1':
            bot.send_message(message.chat.id, "–í—ã –Ω–∞–∂–∞–ª–∏ –ö–Ω–æ–ø–∫–∞ 1. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–Ω–æ–ø–∫—É:", reply_markup=two_markup())
        elif message.text == '–•–æ–º—è–∫':
            bot.send_message(message.chat.id, "üê®", reply_markup=two_markup())
        elif message.text == '–ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, "üê®", reply_markup=markup())
        elif message.text =='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ':
            bot.send_message(message.chat.id, " Hamster Kombat ‚Äî —ç—Ç–æ –∏–≥—Ä–∞ –≤ –∂–∞–Ω—Ä–µ –∫–ª–∏–∫–µ—Ä, –≤ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ Telegram. –í –Ω–µ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Ö–æ–º—è–∫–∞ –≤ –≥–µ–Ω–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏, –∫–ª–∏–∫–∞—è –Ω–∞ –º–æ–Ω–µ—Ç–∫—É (–æ—Ç—Å—é–¥–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ ‚Äî –∫–ª–∏–∫–µ—Ä) –∏ –ø–æ–∫—É–ø–∞—è –∫–∞—Ä—Ç–æ—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è.https://t.me/hamster_kombaT_bot/start?startapp=kentId1901528332" .format(message.from_user))
        elif message.text =='3 —á–∞—Å–∞':
            handle_delay(message,3, '–ü–æ—Ä–∞ –ø–æ—á–µ—Å–∞—Ç—å —Å–≤–æ—é –º–æ—Ö–Ω–∞—Ç–∫—É')
        elif message.text =='—á–∞—Ç':
            bot.send_message(message.chat.id, "https://t.me/hamster_kombat_chat" .format(message.from_user))
    else:
        bot.send_message(message.chat.id, '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã! \n' + channels_link[0] + '\n' + channels_link[1] .format(message.from_user))

# –º–∞—Ä–∫–∞–ø –±–ª—é–º
def blum_markup():
    
    markyp_reply = types.ReplyKeyboardMarkup(resize_keyboard= True)
    item5h = types.KeyboardButton('8 —á–∞—Å–æ–≤')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    info = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ BLUM')
    chat = types.KeyboardButton('—á–∞—Ç Blum')
    markyp_reply.add(info,chat,item5h,back)
    return markyp_reply

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text in  ['','Blum', '–ù–∞–∑–∞–¥', '8 —á–∞—Å–æ–≤', '—á–∞—Ç Blum','–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ BLUM'])
def handle_first_buttons(message):
    if check_sub(message=message, id=channels_id[0]) == True and check_sub(message=message, id=channels_id[1]) == True:
        if message.text == '–ö–Ω–æ–ø–∫–∞ 1':
            bot.send_message(message.chat.id, "–í—ã –Ω–∞–∂–∞–ª–∏ –ö–Ω–æ–ø–∫–∞ 1. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–Ω–æ–ø–∫—É:", reply_markup=blum_markup())   
        elif message.text == 'Blum':
            bot.send_message(message.chat.id,"üê®",  reply_markup=blum_markup())
        elif message.text == '–ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, "üê®", reply_markup=markup())
        elif message.text =='—á–∞—Ç Blum':
            bot.send_message(message.chat.id, "https://t.me/blumcrypto" .format(message.from_user))
        elif message.text =='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ BLUM':
            bot.send_message(message.chat.id, "Blum Crypto ‚Äî —ç—Ç–æ –≥–∏–±—Ä–∏–¥–Ω–∞—è –±–∏—Ä–∂–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∞—è –ª–µ–≥–∫–∏–π –¥–æ—Å—Ç—É–ø –∫ –ª—é–±—ã–º –º–æ–Ω–µ—Ç–∞–º –∏ —Ç–æ–∫–µ–Ω–∞–º, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Å—Ç—ã–º –¥–µ—Ä–∏–≤–∞—Ç–∏–≤–∞–º —á–µ—Ä–µ–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram. –≠—Ç–æ –º–∏–Ω–∏-–∏–≥—Ä–∞ –≤ Telegram, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞—Ä–º Points, —ç—Ç–æ –∂–µ –≤ –±—É–¥—É—â–µ–º —Ç–æ–∫–µ–Ω.t.me/BlumCryptoBot/app?startapp=ref_TvS5V1tzQv" .format(message.from_user))
        elif message.text =='8 —á–∞—Å–æ–≤':
            handle_delay(message,3, '–Ø —Ö–æ—Ç—å –∏ –Ω–µ —Ñ–µ–µ—á–∫–∞, –Ω–æ –ø–æ—Ä–∞ –º–µ–Ω—è –ø–æ—Ç—ã–∫–∞—Ç—å... @BlumCryptoBot')
    else:
        bot.send_message(message.chat.id, '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã! \n' + channels_link[0] + '\n' + channels_link[1] .format(message.from_user))

# –º–∞—Ä–∫–∞–ø hot
def hot_markup():
    markyp_reply = types.ReplyKeyboardMarkup(resize_keyboard= True)
    itemhot = types.KeyboardButton('2 —á–∞—Å–∞')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    info = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Hot')
    chat = types.KeyboardButton('–ß–∞—Ç Hot')
    
    markyp_reply.add(info,chat,itemhot,back)
    return markyp_reply

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text in  ['','Hot', '–ù–∞–∑–∞–¥', '2 —á–∞—Å–∞','–ß–∞—Ç Hot','–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Hot'])
def handle_first_buttons(message):
    if check_sub(message=message, id=channels_id[0]) == True and check_sub(message=message, id=channels_id[1]) == True:
        if message.text == '–ö–Ω–æ–ø–∫–∞ 1':
                bot.send_message(message.chat.id, "–í—ã –Ω–∞–∂–∞–ª–∏ –ö–Ω–æ–ø–∫–∞ 1. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–Ω–æ–ø–∫—É:", reply_markup=hot_markup())
        elif message.text == 'Hot':
                bot.send_message(message.chat.id,"üê®", reply_markup=hot_markup())
        elif message.text == '–ù–∞–∑–∞–¥':
                bot.send_message(message.chat.id, "üê®",reply_markup=markup())
        elif message.text =='—á–∞—Ç HOT':
            bot.send_message(message.chat.id, "https://t.me/hotonnear" .format(message.from_user))
        elif message.text =='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ BLUM':
            bot.send_message(message.chat.id, "HOT - —ç—Ç–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã NEAR –≤–Ω—É—Ç—Ä–∏ Telegram. –ë–ª–∞–≥–æ–¥–∞—Ä—è –º–µ—Ç–∞-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ HOT –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–µ—Ä—à–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ, –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã –∏ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã. –≠—Ç–æ –ø–µ—Ä–≤–∞—è FT, –∫–æ—Ç–æ—Ä–∞—è –æ–±–ª–∞–¥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –Ω–∞—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –±–ª–æ–∫—á–µ–π–Ω–∞ L1.https://t.me/herewalletbot/app?startapp=9415231" .format(message.from_user))
            bot.send_message(message.chat.id,  reply_markup=hot_markup())
        elif message.text =='2 —á–∞—Å–∞':
            handle_delay(message,3, '–ü–æ—Ä–∞ –∏ –¥—Ä–æ–≤ –ø–æ–¥–∫–∏–Ω—É—Ç—å @herewalletbot')
    else:
        bot.send_message(message.chat.id, '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã! \n' + channels_link[0] + '\n' + channels_link[1] .format(message.from_user))

bot.polling(none_stop = True, interval =0) 